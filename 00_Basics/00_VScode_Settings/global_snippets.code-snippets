{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"ifndef": {
		"prefix": "ifndef",
		"body": [
			"#ifndef ${1:label}",
			"#define ${1:label}",
			"",
			"",
			"",
			"#endif  /* ${1:label} */"
		],
		"description": "if not define for the stm32 header."
	},
	"seperator": {
		"prefix": "seperator ==",
		"body": [
			"/* ============================================================================== */",
			"/* ============================================================================== */"
		],
		"description": "function seperator snippet."
	},
	"tree_node": {
		"prefix": "TreeNode",
		"body": [
			"/* 树节点 */",
			"struct TreeNode {",
			"    int val;                    /* 节点的值 */",
			"    struct TreeNode *left;      /* 左节点 */",
			"    struct TreeNode *right;     /* 右节点 */",
			"};"
		],
		"description": "tree node."
	},
	"macro_constants": {
		"prefix": "MacroConstants",
		"body": [
			"/**********************************************************************************/",
			"/*                                                                                */",
			"/*                                MACRO CONSTANTS                                 */",
			"/*                                                                                */",
			"/**********************************************************************************/"
		],
		"description": "macro constants."
	},
	"macro_functions": {
		"prefix": "MacroFunctions",
		"body": [
			"/**********************************************************************************/",
			"/*                                                                                */",
			"/*                                MACRO FUNCTIONS                                 */",
			"/*                                                                                */",
			"/**********************************************************************************/"
		],
		"description": "macro functions."
	},
	"helper_functions": {
		"prefix": "HelperFunctions",
		"body": [
			"/**********************************************************************************/",
			"/*                                                                                */",
			"/*                                HELPER FUNCTIONS                                */",
			"/*                                                                                */",
			"/**********************************************************************************/"
		],
		"description": "helper functions."
	},
	"utility_functions": {
		"prefix": "UtilityFunctions",
		"body": [
			"/**********************************************************************************/",
			"/*                                                                                */",
			"/*                                UTILITY FUNCTIONS                               */",
			"/*                                                                                */",
			"/**********************************************************************************/"
		],
		"description": "utility functions."
	}
}