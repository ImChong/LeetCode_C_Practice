# This is a workflow to get source code and run tests of common functions
name: Common Function Tests

# Controls when the action will run. Workflow runs when manually triggered using the UI or API.
on:
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
    # Allows you to run this workflow every time a commit is pushed to the repository
    push:
      paths:
        - '00_Basics/01_Common_Func/**'
        - '.github/workflows/commonFuncTest.yml'
    # Allows you to run this workflow every time a pull request is opened or updated
    pull_request:
      paths:
        - '00_Basics/01_Common_Func/**'
        - '.github/workflows/commonFuncTest.yml'
    # Schedule a workflow to run automatically
    schedule:
      - cron:  '0 2 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # code-style-check:
    #   runs-on: ubuntu-latest
    #   steps:
    #     # step to checkout the source code
    #     - name: Checkout source code
    #       uses: actions/checkout@main

    #     # step to install clang-format
    #     - name: Install Clang Format
    #       run: sudo apt-get install -y clang-format

    #     # step to install cppcheck
    #     - name: Install Cppcheck
    #       run: sudo apt-get install -y cppcheck

    #     # Step: Tool Versions
    #     - name: Tool Versions
    #       run: |
    #         clang-format --version
    #         cppcheck --version

    #     # step to run clang-format to check the code style
    #     - name: Run Clang Format
    #       run: find . -name '*.c' -exec clang-format -i -style=llvm {} \; || exit 1

    #     # step to run cppcheck to check the code style
    #     - name: Run Cppcheck
    #       run: find . -name '*.c' -exec cppcheck --enable=all --error-exitcode=1 {} \; || exit 1

  # Job
    Test-Common-Functions:
      # Runner
      runs-on: ubuntu-latest
      steps:
        # Step: Checkout source code
        - name: Checkout source code
          uses: actions/checkout@main

        # Step: Setup CMake
        - name: Setup CMake
          uses: jwlawson/actions-setup-cmake@v1.14.1

        # Step: Tool Versions
        - name: Tool Versions
          run: cmake --version

        # Step: Build all the tests
        - name: Build all the tests
          run: |
            mkdir build
            cd build
            cmake ..
            cmake --build .

        # Step: Run all test executables in the build/bin directory
        - name: Run all tests
          run: |
            chmod +x 00_Basics/03_Run_Tests/runTests.sh
            ./00_Basics/03_Run_Tests/runTests.sh
            echo "All executables have been run!"
